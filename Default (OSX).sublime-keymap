[
  // To prevent overrides from plugins
  { "keys": ["ctrl+["], "command": "jump_back" },
  { "keys": ["ctrl+]"], "command": "jump_forward" },

  { "keys": ["super+,"], "command": "git_files_prev_modification" },
  { "keys": ["super+."], "command": "git_files_next_modification" },

  //  Go To Definition
  { "keys": ["super+alt+down"], "command": "chain",
    "args": { "commands": [
        {"command": "two_panes"},
        {"command": "unmaximize_pane"},
        {"command": "goto_definition"}
    ]}
  },

  // go to def
  // expand 2 groups
  // go to def LSP
  { "keys": ["super+alt+down"],
    "command": "chain",
    "args": { "commands": [
        {"command": "two_panes"},
        {"command": "unmaximize_pane"},
        {"command": "lsp_symbol_definition",
          "args": {
            "side_by_side": false,
            "fallback": true,
            "force_group": true,
            "group": 1
          }
        }
    ]},
    "context":
      [
        { "key": "lsp.session_with_capability", "operator": "equal", "operand": "definitionProvider" },
        { "key": "auto_complete_visible", "operator": "equal", "operand": false }
      ]
  },

  // Goto Type Definition
  { "keys": ["super+alt+t"],
    "command": "chain",
    "args": { "commands": [
        {"command": "two_panes"},
        {"command": "unmaximize_pane"},
        {"command": "lsp_symbol_type_definition",
          "args": {
            "side_by_side": false,
            "fallback": true,
            "force_group": true,
            "group": 1
          }
        }
    ]},
    "context": [
        {"key": "lsp.session_with_capability", "operand": "typeDefinitionProvider"},
        {"key": "auto_complete_visible", "operand": false}
    ]
  },

  // https://microsoft.github.io/language-server-protocol/specifications/specification-3-17/#serverCapabilities
  // to find the operand for `lsp.session_with_capability`

  // find all the commands for lsp_

  // Go To Type Defintion XXX - Define them when we really need them
  // Go To Declaration XXX - Define them when we really need them
  // Go To Implemention XXX - Define them when we really need them

  // Find References

  { "keys": ["super+alt+shift+down"], "command": "goto_reference" },
  { "keys": ["super+alt+shift+down"], "command": "lsp_symbol_references", "context":
    [{ "key": "lsp.session_with_capability", "operator": "equal", "operand": "referencesProvider" }]
  },

  // Document Symbols (a replacement for ST's "Goto Symbol")
  { "keys": ["super+r"], "command": "lsp_document_symbols", "context":
     [{ "key": "lsp.session_with_capability", "operator": "equal", "operand": "documentSymbolProvider" }]
  },

  // Workspace Symbols (a replacement for ST's "Goto Symbol In Project")
  { "keys": ["super+shift+r"], "command": "lsp_workspace_symbols", "context":
    [{ "key": "lsp.session_with_capability", "operator": "equal", "operand": "workspaceSymbolProvider" }]
  },

  // Trigger Signature Help
  { "keys": ["super+shift+h"], "command": "lsp_signature_help_show", "context":
    [{ "key": "lsp.signature_help_available", "operator": "equal", "operand": true }]
  },

  { "keys": ["super", "super"], "command": "lsp_hover", "context":
    [{ "key": "lsp.session_with_capability", "operator": "equal", "operand": "hoverProvider" }]
  },

  { "keys": ["super+shift+a"], "command": "lsp_expand_selection", "context":
    [{ "key": "lsp.session_with_capability", "operator": "equal", "operand": "selectionRangeProvider" }]
  },

  { "keys": ["option+enter"], "command": "lsp_code_actions", "context":
    [{ "key": "lsp.session_with_capability", "operator": "equal", "operand": "hoverProvider"}]
  },

  { "keys" : ["super+k", "super+c"], "command": "chain", "args": {
    "commands":
      [
        {"command": "show_at_center"},
        {"command": "scroll_lines", "args": {"amount": -8.0} }
      ]
    }
  },

  { "keys" : ["ctrl+0"], "command": "chain", "args": {
    "commands":
      [
        {"command": "focus_side_bar"},
        {"command": "focus_side_bar"}
      ]
    }
  },

  { "keys" : ["super+j", "super+j"], "command": "chain", "args": {
    "commands":
      [
        {"command": "unfold_all"},
        {"command": "reg_replace", "args": {"replacements": ["fold-blocks"], "action": "fold" }},
        {"command": "foldr_next"},
        {"command": "unfold"}
      ]
    }
  },
  {
    "keys": ["super+k", "super+p"],
    "command": "show_overlay",
    "args": {"overlay": "command_palette", "command": "switch_window"}
  },
  { "keys": ["super+\\"], "command": "focus_neighboring_group"},
  { "keys": ["shift+super+\\"], "command": "max_pane"},
  { "keys": ["super+w"], "command": "close_pane", "context":
    [
      { "key": "group_has_transient_sheet", "operator": "equal", "operand": true }
    ]
  },

  { "keys": ["alt+up"], "command": "scroll_lines", "args": {"amount": 10.0} },
  { "keys": ["alt+down"], "command": "scroll_lines", "args": {"amount": -10.0} },
]
